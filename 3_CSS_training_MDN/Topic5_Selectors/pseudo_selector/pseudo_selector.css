/*
	A CSS pseudo-class is a keyword added to selectors that specifies
	a special state of the element to be selected. For example :hover 
	will apply a style when the user hovers over the element specified
	by the selector.

	Pseudo-classes, together with pseudo-elements, let you apply a 
	style to an element not only in relation to the content of the 
	document tree, but also in relation to external factors like the
	history of the navigator (:visited, for example), the status of 
	its content (like :checked on some form elements), or the position
	of the mouse (like :hover which lets you know if the mouse is 
	over an element or not).

	Syntax:;
		selector:pseudo-class {
  			property: value;
		}

	https://hacks.mozilla.org/2010/03/privacy-related-changes-coming-to-css-vistited/
	

	List of pseudo-classes

		:link
		:visited
		:active
		:hover
		:focus
		:first-child
		:last-child
		:nth-child
		:nth-last-child
		:nth-of-type
		:first-of-type
		:last-of-type
		:empty
		:target
		:checked
		:enabled
		:disabled
*/

/*

	Selectors based on relationships:
		CSS has some ways to select elements based on the relationships 
		between elements. You can use these to make selectors that are more specific.
	
	Common selectors based on relationships
			Selector			Selects
			A E					Any E element that is a descendant of an A element (that is: a child, or a child of a child, etc.)
			A > E				Any E element that is a child (i.e. direct descendant) of an A element
			E:first-child		Any E element that is the first child of its parent
			B + E				Any E element that is the next sibling of a B element (that is: the next child of the same parent)

	You can combine these to express complex relationships.
	You can also use the symbol * (asterisk) to mean "any element".

	
	For example:
	Say, An HTML table has an id attribute, but its rows and cells do not have individual identifiers:

	<table id="data-table-1">
		<tr>
			<td>Prefix</td>
			<td>0001</td>
			<td>default</td>
		</tr>
	</table>

	These rules make the first cell in each row bold, and the second cell in each row 
	monospaced. They only affect one specific table in the document:

*/
#data-table-1 td:first-child {font-weight: bolder;}
#data-table-1 td:first-child + td {font-family: monospace;}

/*
	In the usual way, if you make a selector more specific, then you 
	increase its priority.

	If you use these techniques, you avoid the need to specify class 
	or id attributes on so many tags in your document. Instead, CSS 
	does the work.

	In large designs where speed is important, you can make your 
	stylesheets more efficient by avoiding complex rules that depend 
	on relationships between elements.
*/

a.homepage:link, a.homepage:visited {
  padding: 1px 10px 1px 10px;
  color: #fff;
  background: #555;
  border-radius: 3px;
  border: 1px outset rgba(50,50,50,.5);
  font-family: georgia, serif;
  font-size: 14px;
  font-style: italic;
  text-decoration: none;
}

a.homepage:hover, a.homepage:focus, a.homepage:active {
  background-color: red;
}

/*
	Hover is 'true' when the mouse pointer is over an element. Focus is 
	true if the cursor is in that element. It's possible for hover to 
	be false and focus true (e.g click in a text field then move the mouse away)
*/
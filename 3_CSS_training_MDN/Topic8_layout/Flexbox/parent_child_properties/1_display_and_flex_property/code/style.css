.box{
    color: white;
    font-size: 100px;
    text-align: center;
    text-shadow: 4px 4px 0 rgba(0, 0, 0, 0, 1);
}

.box1{ background: #1abc9c; }
.box2{ background: #3498db; }
.box3{ background: #9b59b6; }
.box4{ background: #34495e; }
.box5{ background: #f1c40f; }
.box6{ background: #e67e22; }
.box7{ background: #e74c3c; }
.box8{ background: #bdc3c7; }
.box9{ background: #2ecc71; }
.box10{ background: #16ae85; }








/* Properties for the parent(container) - start */
/* A flexbox layout consists of a parent element, with one or more child elements. */
/* The parent element becomes flexible by setting the display property to flex */
/*
.container{
	display: flex;
	border: 10px solid goldenrod;
}
*/

/*
	
	Below declaration makes the flex container display inline. That is the only difference 
	between "display: inline-flex" and "display: flex". A similar comparison can 
	be made between "display: inline-block" and "display: block".
	https://stackoverflow.com/a/9189873/1787812
*/
.container{
	display: inline-flex;
}
/* Properties for the parent(container) - end */











/* Properties for the children(items) - start */
/* The direct child element(s) of a flexible container automatically becomes flexible items. */
.box{
	flex: 1;
}

.box3{
	flex: 2;
}

.box6{
	flex: 4;
}
/* Properties for the children(items) - end */

